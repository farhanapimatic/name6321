# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module CodeGenAndTransformerApi
  # APIDescriptionValidationController
  class APIDescriptionValidationController < BaseController
    @instance = APIDescriptionValidationController.new

    class << self
      attr_accessor :instance
    end

    def instance
      self.class.instance
    end

    # This endpoint can be used to validate an API description document *on the
    # fly* and see detailed error messages along with any warnings or useful
    # information.
    # @param [File] body Required parameter: The input file to use for
    # validation
    # @return ValidateAnAPIDescriptionResponse response from the API call
    def using_file(body)
      # Prepare query url.
      _query_builder = Configuration.base_uri.dup
      _query_builder << '/validate'
      _query_url = APIHelper.clean_url _query_builder

      # Prepare headers.
      _headers = {
        'accept' => 'application/json'
      }

      # Prepare form parameters.
      _parameters = {
        'body' => body
      }

      # Prepare and execute HttpRequest.
      _request = @http_client.post(
        _query_url,
        headers: _headers,
        parameters: _parameters
      )
      BasicAuth.apply(_request)
      _context = execute_request(_request)
      validate_response(_context)

      # Return appropriate response type.
      decoded = APIHelper.json_deserialize(_context.response.raw_body)
      ValidateAnAPIDescriptionResponse.from_hash(decoded)
    end

    # This endpoint can be used to validate an API description document *on the
    # fly* from its public Uri, and see detailed error messages along with any
    # warnings or useful information. This endpoint is useful for API
    # descriptions with relative links e.g., includes (RAML) and paths
    # (swagger).
    # @param [String] description_url Required parameter: The absolute public
    # Uri for an API description doucment
    # @return ValidateAnAPIDescriptionResponse response from the API call
    def using_url(description_url)
      # Prepare query url.
      _query_builder = Configuration.base_uri.dup
      _query_builder << '/validate'
      _query_builder = APIHelper.append_url_with_query_parameters(
        _query_builder,
        'descriptionUrl' => description_url,
        array_serialization: Configuration.array_serialization
      )
      _query_url = APIHelper.clean_url _query_builder

      # Prepare headers.
      _headers = {
        'accept' => 'application/json'
      }

      # Prepare and execute HttpRequest.
      _request = @http_client.get(
        _query_url,
        headers: _headers
      )
      BasicAuth.apply(_request)
      _context = execute_request(_request)
      validate_response(_context)

      # Return appropriate response type.
      decoded = APIHelper.json_deserialize(_context.response.raw_body)
      ValidateAnAPIDescriptionResponse.from_hash(decoded)
    end

    # This endpoint can be used to validate a *pre-configured* API description
    # and see detailed error messages along with any warnings or useful
    # information.
    # @param [String] apikey Required parameter: The API Key of a pre-configured
    # API description from APIMATIC
    # @return ValidateAnAPIDescriptionResponse response from the API call
    def using_apikey(apikey)
      # Prepare query url.
      _query_builder = Configuration.base_uri.dup
      _query_builder << '/validate'
      _query_builder = APIHelper.append_url_with_query_parameters(
        _query_builder,
        'apikey' => apikey,
        array_serialization: Configuration.array_serialization
      )
      _query_url = APIHelper.clean_url _query_builder

      # Prepare headers.
      _headers = {
        'accept' => 'application/json'
      }

      # Prepare and execute HttpRequest.
      _request = @http_client.get(
        _query_url,
        headers: _headers
      )
      BasicAuth.apply(_request)
      _context = execute_request(_request)
      validate_response(_context)

      # Return appropriate response type.
      decoded = APIHelper.json_deserialize(_context.response.raw_body)
      ValidateAnAPIDescriptionResponse.from_hash(decoded)
    end
  end
end
